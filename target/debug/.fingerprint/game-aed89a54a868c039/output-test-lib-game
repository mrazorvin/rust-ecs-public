{"$message_type":"diagnostic","message":"creating a shared reference to mutable static is discouraged","code":{"code":"static_mut_refs","explanation":null},"level":"warning","spans":[{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":16579,"byte_end":16607,"line_start":414,"line_end":414,"column_start":30,"column_end":58,"is_primary":true,"text":[{"text":"              match unsafe { &$crate::ecs::logger::LOGGER } {","highlight_start":30,"highlight_end":58}],"label":"shared reference to mutable static","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":17148,"byte_end":17227,"line_start":436,"line_end":436,"column_start":9,"column_end":88,"is_primary":false,"text":[{"text":"        $crate::_log!(LogType::$log_type, { is_sync: false, is_dev: false }, $($args)*);","highlight_start":9,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18048,"byte_end":18067,"line_start":472,"line_end":472,"column_start":5,"column_end":24,"is_primary":false,"text":[{"text":"    log!(INFO, \"Hello\");","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"log!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":17081,"byte_end":17097,"line_start":434,"line_end":434,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! log {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::_log!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":14766,"byte_end":14783,"line_start":370,"line_end":370,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! _log {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this will be a hard error in the 2024 edition","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this shared reference has lifetime `'static`, but if the static ever gets mutated, or a mutable reference is created, then any further use of this shared reference is Undefined Behavior","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(static_mut_refs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `addr_of!` instead to create a raw pointer","code":null,"level":"help","spans":[{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":16579,"byte_end":16607,"line_start":414,"line_end":414,"column_start":30,"column_end":58,"is_primary":true,"text":[{"text":"              match unsafe { &$crate::ecs::logger::LOGGER } {","highlight_start":30,"highlight_end":58}],"label":null,"suggested_replacement":"addr_of!(crate::ecs::logger::LOGGER)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":17148,"byte_end":17227,"line_start":436,"line_end":436,"column_start":9,"column_end":88,"is_primary":false,"text":[{"text":"        $crate::_log!(LogType::$log_type, { is_sync: false, is_dev: false }, $($args)*);","highlight_start":9,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18048,"byte_end":18067,"line_start":472,"line_end":472,"column_start":5,"column_end":24,"is_primary":false,"text":[{"text":"    log!(INFO, \"Hello\");","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"log!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":17081,"byte_end":17097,"line_start":434,"line_end":434,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! log {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::_log!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":14766,"byte_end":14783,"line_start":370,"line_end":370,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! _log {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: creating a shared reference to mutable static is discouraged\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\ecs\\logger\\logger.rs:414:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m              match unsafe { &$crate::ecs::logger::LOGGER \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mshared reference to mutable static\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m472\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    log!(INFO, \"Hello\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this will be a hard error in the 2024 edition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this shared reference has lifetime `'static`, but if the static ever gets mutated, or a mutable reference is created, then any further use of this shared reference is Undefined Behavior\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(static_mut_refs)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::_log` which comes from the expansion of the macro `log` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `addr_of!` instead to create a raw pointer\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m              match unsafe { \u001b[0m\u001b[0m\u001b[38;5;10maddr_of!(crate::ecs::logger::LOGGER)\u001b[0m\u001b[0m } {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"creating a shared reference to mutable static is discouraged","code":{"code":"static_mut_refs","explanation":null},"level":"warning","spans":[{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":16579,"byte_end":16607,"line_start":414,"line_end":414,"column_start":30,"column_end":58,"is_primary":true,"text":[{"text":"              match unsafe { &$crate::ecs::logger::LOGGER } {","highlight_start":30,"highlight_end":58}],"label":"shared reference to mutable static","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18389,"byte_end":18467,"line_start":486,"line_end":486,"column_start":13,"column_end":91,"is_primary":false,"text":[{"text":"            $crate::_log!(LogType::$log_type, { is_sync: false, is_dev: true }, $($args)*);","highlight_start":13,"highlight_end":91}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18755,"byte_end":18778,"line_start":499,"line_end":499,"column_start":9,"column_end":32,"is_primary":false,"text":[{"text":"        log_dev!(INFO, \"{}\", i);","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"log_dev!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18310,"byte_end":18330,"line_start":484,"line_end":484,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! log_dev {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::_log!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":14766,"byte_end":14783,"line_start":370,"line_end":370,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! _log {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this will be a hard error in the 2024 edition","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this shared reference has lifetime `'static`, but if the static ever gets mutated, or a mutable reference is created, then any further use of this shared reference is Undefined Behavior","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `addr_of!` instead to create a raw pointer","code":null,"level":"help","spans":[{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":16579,"byte_end":16607,"line_start":414,"line_end":414,"column_start":30,"column_end":58,"is_primary":true,"text":[{"text":"              match unsafe { &$crate::ecs::logger::LOGGER } {","highlight_start":30,"highlight_end":58}],"label":null,"suggested_replacement":"addr_of!(crate::ecs::logger::LOGGER)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18389,"byte_end":18467,"line_start":486,"line_end":486,"column_start":13,"column_end":91,"is_primary":false,"text":[{"text":"            $crate::_log!(LogType::$log_type, { is_sync: false, is_dev: true }, $($args)*);","highlight_start":13,"highlight_end":91}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18755,"byte_end":18778,"line_start":499,"line_end":499,"column_start":9,"column_end":32,"is_primary":false,"text":[{"text":"        log_dev!(INFO, \"{}\", i);","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"log_dev!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18310,"byte_end":18330,"line_start":484,"line_end":484,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! log_dev {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::_log!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":14766,"byte_end":14783,"line_start":370,"line_end":370,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! _log {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: creating a shared reference to mutable static is discouraged\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\ecs\\logger\\logger.rs:414:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m         match unsafe { &$crate::ecs::logger::LOGGER \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mshared reference to mutable static\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m499\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   log_dev!(INFO, \"{}\", i);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this will be a hard error in the 2024 edition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this shared reference has lifetime `'static`, but if the static ever gets mutated, or a mutable reference is created, then any further use of this shared reference is Undefined Behavior\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::_log` which comes from the expansion of the macro `log_dev` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `addr_of!` instead to create a raw pointer\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m              match unsafe { \u001b[0m\u001b[0m\u001b[38;5;10maddr_of!(crate::ecs::logger::LOGGER)\u001b[0m\u001b[0m } {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"creating a shared reference to mutable static is discouraged","code":{"code":"static_mut_refs","explanation":null},"level":"warning","spans":[{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":16579,"byte_end":16607,"line_start":414,"line_end":414,"column_start":30,"column_end":58,"is_primary":true,"text":[{"text":"              match unsafe { &$crate::ecs::logger::LOGGER } {","highlight_start":30,"highlight_end":58}],"label":"shared reference to mutable static","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18579,"byte_end":18656,"line_start":492,"line_end":492,"column_start":13,"column_end":90,"is_primary":false,"text":[{"text":"            $crate::_log!(LogType::$log_type, { is_sync: true, is_dev: true }, $($args)*);","highlight_start":13,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18792,"byte_end":18821,"line_start":501,"line_end":501,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    log_dev_sync!(INFO, \"{}\", 10);","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"log_dev_sync!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18495,"byte_end":18520,"line_start":490,"line_end":490,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    macro_rules! log_dev_sync {","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::_log!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":14766,"byte_end":14783,"line_start":370,"line_end":370,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! _log {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this will be a hard error in the 2024 edition","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this shared reference has lifetime `'static`, but if the static ever gets mutated, or a mutable reference is created, then any further use of this shared reference is Undefined Behavior","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `addr_of!` instead to create a raw pointer","code":null,"level":"help","spans":[{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":16579,"byte_end":16607,"line_start":414,"line_end":414,"column_start":30,"column_end":58,"is_primary":true,"text":[{"text":"              match unsafe { &$crate::ecs::logger::LOGGER } {","highlight_start":30,"highlight_end":58}],"label":null,"suggested_replacement":"addr_of!(crate::ecs::logger::LOGGER)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18579,"byte_end":18656,"line_start":492,"line_end":492,"column_start":13,"column_end":90,"is_primary":false,"text":[{"text":"            $crate::_log!(LogType::$log_type, { is_sync: true, is_dev: true }, $($args)*);","highlight_start":13,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18792,"byte_end":18821,"line_start":501,"line_end":501,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    log_dev_sync!(INFO, \"{}\", 10);","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"log_dev_sync!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18495,"byte_end":18520,"line_start":490,"line_end":490,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    macro_rules! log_dev_sync {","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::_log!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":14766,"byte_end":14783,"line_start":370,"line_end":370,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! _log {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: creating a shared reference to mutable static is discouraged\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\ecs\\logger\\logger.rs:414:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m              match unsafe { &$crate::ecs::logger::LOGGER \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mshared reference to mutable static\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m501\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    log_dev_sync!(INFO, \"{}\", 10);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this will be a hard error in the 2024 edition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this shared reference has lifetime `'static`, but if the static ever gets mutated, or a mutable reference is created, then any further use of this shared reference is Undefined Behavior\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::_log` which comes from the expansion of the macro `log_dev_sync` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `addr_of!` instead to create a raw pointer\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m              match unsafe { \u001b[0m\u001b[0m\u001b[38;5;10maddr_of!(crate::ecs::logger::LOGGER)\u001b[0m\u001b[0m } {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"creating a shared reference to mutable static is discouraged","code":{"code":"static_mut_refs","explanation":null},"level":"warning","spans":[{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":16579,"byte_end":16607,"line_start":414,"line_end":414,"column_start":30,"column_end":58,"is_primary":true,"text":[{"text":"              match unsafe { &$crate::ecs::logger::LOGGER } {","highlight_start":30,"highlight_end":58}],"label":"shared reference to mutable static","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18389,"byte_end":18467,"line_start":486,"line_end":486,"column_start":13,"column_end":91,"is_primary":false,"text":[{"text":"            $crate::_log!(LogType::$log_type, { is_sync: false, is_dev: true }, $($args)*);","highlight_start":13,"highlight_end":91}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":19075,"byte_end":19098,"line_start":510,"line_end":510,"column_start":9,"column_end":32,"is_primary":false,"text":[{"text":"        log_dev!(INFO, \"{}\", i);","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"log_dev!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18310,"byte_end":18330,"line_start":484,"line_end":484,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! log_dev {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::_log!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":14766,"byte_end":14783,"line_start":370,"line_end":370,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! _log {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this will be a hard error in the 2024 edition","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this shared reference has lifetime `'static`, but if the static ever gets mutated, or a mutable reference is created, then any further use of this shared reference is Undefined Behavior","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `addr_of!` instead to create a raw pointer","code":null,"level":"help","spans":[{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":16579,"byte_end":16607,"line_start":414,"line_end":414,"column_start":30,"column_end":58,"is_primary":true,"text":[{"text":"              match unsafe { &$crate::ecs::logger::LOGGER } {","highlight_start":30,"highlight_end":58}],"label":null,"suggested_replacement":"addr_of!(crate::ecs::logger::LOGGER)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18389,"byte_end":18467,"line_start":486,"line_end":486,"column_start":13,"column_end":91,"is_primary":false,"text":[{"text":"            $crate::_log!(LogType::$log_type, { is_sync: false, is_dev: true }, $($args)*);","highlight_start":13,"highlight_end":91}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":19075,"byte_end":19098,"line_start":510,"line_end":510,"column_start":9,"column_end":32,"is_primary":false,"text":[{"text":"        log_dev!(INFO, \"{}\", i);","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"log_dev!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18310,"byte_end":18330,"line_start":484,"line_end":484,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! log_dev {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::_log!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":14766,"byte_end":14783,"line_start":370,"line_end":370,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! _log {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: creating a shared reference to mutable static is discouraged\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\ecs\\logger\\logger.rs:414:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m         match unsafe { &$crate::ecs::logger::LOGGER \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mshared reference to mutable static\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m510\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   log_dev!(INFO, \"{}\", i);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this will be a hard error in the 2024 edition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this shared reference has lifetime `'static`, but if the static ever gets mutated, or a mutable reference is created, then any further use of this shared reference is Undefined Behavior\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::_log` which comes from the expansion of the macro `log_dev` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `addr_of!` instead to create a raw pointer\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m              match unsafe { \u001b[0m\u001b[0m\u001b[38;5;10maddr_of!(crate::ecs::logger::LOGGER)\u001b[0m\u001b[0m } {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"creating a shared reference to mutable static is discouraged","code":{"code":"static_mut_refs","explanation":null},"level":"warning","spans":[{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":16579,"byte_end":16607,"line_start":414,"line_end":414,"column_start":30,"column_end":58,"is_primary":true,"text":[{"text":"              match unsafe { &$crate::ecs::logger::LOGGER } {","highlight_start":30,"highlight_end":58}],"label":"shared reference to mutable static","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18579,"byte_end":18656,"line_start":492,"line_end":492,"column_start":13,"column_end":90,"is_primary":false,"text":[{"text":"            $crate::_log!(LogType::$log_type, { is_sync: true, is_dev: true }, $($args)*);","highlight_start":13,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":19112,"byte_end":19160,"line_start":512,"line_end":512,"column_start":5,"column_end":53,"is_primary":false,"text":[{"text":"    log_dev_sync!(INFO, \"{}\", MAX_LOGS_PER_FILE + 1);","highlight_start":5,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"log_dev_sync!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18495,"byte_end":18520,"line_start":490,"line_end":490,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    macro_rules! log_dev_sync {","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::_log!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":14766,"byte_end":14783,"line_start":370,"line_end":370,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! _log {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this will be a hard error in the 2024 edition","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this shared reference has lifetime `'static`, but if the static ever gets mutated, or a mutable reference is created, then any further use of this shared reference is Undefined Behavior","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `addr_of!` instead to create a raw pointer","code":null,"level":"help","spans":[{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":16579,"byte_end":16607,"line_start":414,"line_end":414,"column_start":30,"column_end":58,"is_primary":true,"text":[{"text":"              match unsafe { &$crate::ecs::logger::LOGGER } {","highlight_start":30,"highlight_end":58}],"label":null,"suggested_replacement":"addr_of!(crate::ecs::logger::LOGGER)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18579,"byte_end":18656,"line_start":492,"line_end":492,"column_start":13,"column_end":90,"is_primary":false,"text":[{"text":"            $crate::_log!(LogType::$log_type, { is_sync: true, is_dev: true }, $($args)*);","highlight_start":13,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":19112,"byte_end":19160,"line_start":512,"line_end":512,"column_start":5,"column_end":53,"is_primary":false,"text":[{"text":"    log_dev_sync!(INFO, \"{}\", MAX_LOGS_PER_FILE + 1);","highlight_start":5,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"log_dev_sync!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":18495,"byte_end":18520,"line_start":490,"line_end":490,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    macro_rules! log_dev_sync {","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::_log!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":14766,"byte_end":14783,"line_start":370,"line_end":370,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! _log {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: creating a shared reference to mutable static is discouraged\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\ecs\\logger\\logger.rs:414:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m              match unsafe { &$crate::ecs::logger::LOGGER \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mshared reference to mutable static\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m512\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    log_dev_sync!(INFO, \"{}\", MAX_LOGS_PER_FILE + 1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this will be a hard error in the 2024 edition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this shared reference has lifetime `'static`, but if the static ever gets mutated, or a mutable reference is created, then any further use of this shared reference is Undefined Behavior\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::_log` which comes from the expansion of the macro `log_dev_sync` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `addr_of!` instead to create a raw pointer\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m              match unsafe { \u001b[0m\u001b[0m\u001b[38;5;10maddr_of!(crate::ecs::logger::LOGGER)\u001b[0m\u001b[0m } {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"creating a shared reference to mutable static is discouraged","code":{"code":"static_mut_refs","explanation":null},"level":"warning","spans":[{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":16579,"byte_end":16607,"line_start":414,"line_end":414,"column_start":30,"column_end":58,"is_primary":true,"text":[{"text":"              match unsafe { &$crate::ecs::logger::LOGGER } {","highlight_start":30,"highlight_end":58}],"label":"shared reference to mutable static","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":19943,"byte_end":20021,"line_start":541,"line_end":541,"column_start":13,"column_end":91,"is_primary":false,"text":[{"text":"            $crate::_log!(LogType::$log_type, { is_sync: false, is_dev: true }, $($args)*);","highlight_start":13,"highlight_end":91}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":20644,"byte_end":20667,"line_start":560,"line_end":560,"column_start":36,"column_end":59,"is_primary":false,"text":[{"text":"                testing::mock_run!(log_dev!(INFO, \"{}\", i), |mock: &mut LogMock| {","highlight_start":36,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"log_dev!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":19863,"byte_end":19883,"line_start":539,"line_end":539,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! log_dev {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::_log!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":14766,"byte_end":14783,"line_start":370,"line_end":370,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! _log {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this will be a hard error in the 2024 edition","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this shared reference has lifetime `'static`, but if the static ever gets mutated, or a mutable reference is created, then any further use of this shared reference is Undefined Behavior","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `addr_of!` instead to create a raw pointer","code":null,"level":"help","spans":[{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":16579,"byte_end":16607,"line_start":414,"line_end":414,"column_start":30,"column_end":58,"is_primary":true,"text":[{"text":"              match unsafe { &$crate::ecs::logger::LOGGER } {","highlight_start":30,"highlight_end":58}],"label":null,"suggested_replacement":"addr_of!(crate::ecs::logger::LOGGER)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":19943,"byte_end":20021,"line_start":541,"line_end":541,"column_start":13,"column_end":91,"is_primary":false,"text":[{"text":"            $crate::_log!(LogType::$log_type, { is_sync: false, is_dev: true }, $($args)*);","highlight_start":13,"highlight_end":91}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":20644,"byte_end":20667,"line_start":560,"line_end":560,"column_start":36,"column_end":59,"is_primary":false,"text":[{"text":"                testing::mock_run!(log_dev!(INFO, \"{}\", i), |mock: &mut LogMock| {","highlight_start":36,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"log_dev!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":19863,"byte_end":19883,"line_start":539,"line_end":539,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! log_dev {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::_log!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":14766,"byte_end":14783,"line_start":370,"line_end":370,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! _log {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: creating a shared reference to mutable static is discouraged\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\ecs\\logger\\logger.rs:414:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0msafe { &$crate::ecs::logger::LOGGER } {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mshared reference to mutable static\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m560\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0mg::mock_run!(log_dev!(INFO, \"{}\", i), |mock: &mu\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this will be a hard error in the 2024 edition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this shared reference has lifetime `'static`, but if the static ever gets mutated, or a mutable reference is created, then any further use of this shared reference is Undefined Behavior\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::_log` which comes from the expansion of the macro `log_dev` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `addr_of!` instead to create a raw pointer\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m              match unsafe { \u001b[0m\u001b[0m\u001b[38;5;10maddr_of!(crate::ecs::logger::LOGGER)\u001b[0m\u001b[0m } {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"creating a shared reference to mutable static is discouraged","code":{"code":"static_mut_refs","explanation":null},"level":"warning","spans":[{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":16579,"byte_end":16607,"line_start":414,"line_end":414,"column_start":30,"column_end":58,"is_primary":true,"text":[{"text":"              match unsafe { &$crate::ecs::logger::LOGGER } {","highlight_start":30,"highlight_end":58}],"label":"shared reference to mutable static","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":19943,"byte_end":20021,"line_start":541,"line_end":541,"column_start":13,"column_end":91,"is_primary":false,"text":[{"text":"            $crate::_log!(LogType::$log_type, { is_sync: false, is_dev: true }, $($args)*);","highlight_start":13,"highlight_end":91}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":21116,"byte_end":21140,"line_start":573,"line_end":573,"column_start":36,"column_end":60,"is_primary":false,"text":[{"text":"                testing::mock_run!(log_dev!(ERROR, \"{}\", i), |mock: &mut LogMock| {","highlight_start":36,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"log_dev!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":19863,"byte_end":19883,"line_start":539,"line_end":539,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! log_dev {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::_log!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":14766,"byte_end":14783,"line_start":370,"line_end":370,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! _log {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this will be a hard error in the 2024 edition","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this shared reference has lifetime `'static`, but if the static ever gets mutated, or a mutable reference is created, then any further use of this shared reference is Undefined Behavior","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `addr_of!` instead to create a raw pointer","code":null,"level":"help","spans":[{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":16579,"byte_end":16607,"line_start":414,"line_end":414,"column_start":30,"column_end":58,"is_primary":true,"text":[{"text":"              match unsafe { &$crate::ecs::logger::LOGGER } {","highlight_start":30,"highlight_end":58}],"label":null,"suggested_replacement":"addr_of!(crate::ecs::logger::LOGGER)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":19943,"byte_end":20021,"line_start":541,"line_end":541,"column_start":13,"column_end":91,"is_primary":false,"text":[{"text":"            $crate::_log!(LogType::$log_type, { is_sync: false, is_dev: true }, $($args)*);","highlight_start":13,"highlight_end":91}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":21116,"byte_end":21140,"line_start":573,"line_end":573,"column_start":36,"column_end":60,"is_primary":false,"text":[{"text":"                testing::mock_run!(log_dev!(ERROR, \"{}\", i), |mock: &mut LogMock| {","highlight_start":36,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"log_dev!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":19863,"byte_end":19883,"line_start":539,"line_end":539,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! log_dev {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::_log!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":14766,"byte_end":14783,"line_start":370,"line_end":370,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! _log {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: creating a shared reference to mutable static is discouraged\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\ecs\\logger\\logger.rs:414:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0msafe { &$crate::ecs::logger::LOGGER } {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mshared reference to mutable static\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m573\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0mg::mock_run!(log_dev!(ERROR, \"{}\", i), |mock: &m\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this will be a hard error in the 2024 edition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this shared reference has lifetime `'static`, but if the static ever gets mutated, or a mutable reference is created, then any further use of this shared reference is Undefined Behavior\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::_log` which comes from the expansion of the macro `log_dev` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `addr_of!` instead to create a raw pointer\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m              match unsafe { \u001b[0m\u001b[0m\u001b[38;5;10maddr_of!(crate::ecs::logger::LOGGER)\u001b[0m\u001b[0m } {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"creating a mutable reference to mutable static is discouraged","code":{"code":"static_mut_refs","explanation":null},"level":"warning","spans":[{"file_name":"src\\ecs\\logger\\metrics.rs","byte_start":3029,"byte_end":3047,"line_start":69,"line_end":69,"column_start":42,"column_end":60,"is_primary":true,"text":[{"text":"        let metrics_cycle_ref = unsafe { &mut METRICS_CYCLE };","highlight_start":42,"highlight_end":60}],"label":"mutable reference to mutable static","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this will be a hard error in the 2024 edition","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `addr_of_mut!` instead to create a raw pointer","code":null,"level":"help","spans":[{"file_name":"src\\ecs\\logger\\metrics.rs","byte_start":3029,"byte_end":3047,"line_start":69,"line_end":69,"column_start":42,"column_end":60,"is_primary":true,"text":[{"text":"        let metrics_cycle_ref = unsafe { &mut METRICS_CYCLE };","highlight_start":42,"highlight_end":60}],"label":null,"suggested_replacement":"addr_of_mut!(METRICS_CYCLE)","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: creating a mutable reference to mutable static is discouraged\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\ecs\\logger\\metrics.rs:69:42\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0mf = unsafe { &mut METRICS_CYCLE };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mmutable reference to mutable static\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this will be a hard error in the 2024 edition\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `addr_of_mut!` instead to create a raw pointer\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        let metrics_cycle_ref = unsafe { \u001b[0m\u001b[0m\u001b[38;5;10maddr_of_mut!(METRICS_CYCLE)\u001b[0m\u001b[0m };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"creating a shared reference to mutable static is discouraged","code":{"code":"static_mut_refs","explanation":null},"level":"warning","spans":[{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":16579,"byte_end":16607,"line_start":414,"line_end":414,"column_start":30,"column_end":58,"is_primary":true,"text":[{"text":"              match unsafe { &$crate::ecs::logger::LOGGER } {","highlight_start":30,"highlight_end":58}],"label":"shared reference to mutable static","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":17148,"byte_end":17227,"line_start":436,"line_end":436,"column_start":9,"column_end":88,"is_primary":false,"text":[{"text":"        $crate::_log!(LogType::$log_type, { is_sync: false, is_dev: false }, $($args)*);","highlight_start":9,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\metrics.rs","byte_start":4645,"byte_end":4703,"line_start":107,"line_end":107,"column_start":13,"column_end":71,"is_primary":false,"text":[{"text":"            $crate::log!(METRIC, $($pattern)*, counter = next_counter);","highlight_start":13,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\metrics.rs","byte_start":5361,"byte_end":5394,"line_start":131,"line_end":131,"column_start":16,"column_end":49,"is_primary":false,"text":[{"text":"        return metric!(\"test-metric# {counter}\");","highlight_start":16,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"metric!","def_site_span":{"file_name":"src\\ecs\\logger\\metrics.rs","byte_start":3686,"byte_end":3705,"line_start":91,"line_end":91,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! metric {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::log!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":17081,"byte_end":17097,"line_start":434,"line_end":434,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! log {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::_log!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":14766,"byte_end":14783,"line_start":370,"line_end":370,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! _log {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this will be a hard error in the 2024 edition","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this shared reference has lifetime `'static`, but if the static ever gets mutated, or a mutable reference is created, then any further use of this shared reference is Undefined Behavior","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `addr_of!` instead to create a raw pointer","code":null,"level":"help","spans":[{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":16579,"byte_end":16607,"line_start":414,"line_end":414,"column_start":30,"column_end":58,"is_primary":true,"text":[{"text":"              match unsafe { &$crate::ecs::logger::LOGGER } {","highlight_start":30,"highlight_end":58}],"label":null,"suggested_replacement":"addr_of!(crate::ecs::logger::LOGGER)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":17148,"byte_end":17227,"line_start":436,"line_end":436,"column_start":9,"column_end":88,"is_primary":false,"text":[{"text":"        $crate::_log!(LogType::$log_type, { is_sync: false, is_dev: false }, $($args)*);","highlight_start":9,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\metrics.rs","byte_start":4645,"byte_end":4703,"line_start":107,"line_end":107,"column_start":13,"column_end":71,"is_primary":false,"text":[{"text":"            $crate::log!(METRIC, $($pattern)*, counter = next_counter);","highlight_start":13,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\ecs\\logger\\metrics.rs","byte_start":5361,"byte_end":5394,"line_start":131,"line_end":131,"column_start":16,"column_end":49,"is_primary":false,"text":[{"text":"        return metric!(\"test-metric# {counter}\");","highlight_start":16,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"metric!","def_site_span":{"file_name":"src\\ecs\\logger\\metrics.rs","byte_start":3686,"byte_end":3705,"line_start":91,"line_end":91,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! metric {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::log!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":17081,"byte_end":17097,"line_start":434,"line_end":434,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! log {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::_log!","def_site_span":{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":14766,"byte_end":14783,"line_start":370,"line_end":370,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! _log {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: creating a shared reference to mutable static is discouraged\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\ecs\\logger\\logger.rs:414:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0msafe { &$crate::ecs::logger::LOGGER } {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mshared reference to mutable static\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\ecs\\logger\\metrics.rs:131:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return metric!(\"test-metric# {counter}\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this will be a hard error in the 2024 edition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this shared reference has lifetime `'static`, but if the static ever gets mutated, or a mutable reference is created, then any further use of this shared reference is Undefined Behavior\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::_log` which comes from the expansion of the macro `metric` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `addr_of!` instead to create a raw pointer\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m              match unsafe { \u001b[0m\u001b[0m\u001b[38;5;10maddr_of!(crate::ecs::logger::LOGGER)\u001b[0m\u001b[0m } {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `current_time`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":5969,"byte_end":5981,"line_start":174,"line_end":174,"column_start":25,"column_end":37,"is_primary":true,"text":[{"text":"                    let current_time = libc_strftime::strftime_gmt(\"%d-%m-%Y %H:%S\", start_time);","highlight_start":25,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\ecs\\logger\\logger.rs","byte_start":5969,"byte_end":5981,"line_start":174,"line_end":174,"column_start":25,"column_end":37,"is_primary":true,"text":[{"text":"                    let current_time = libc_strftime::strftime_gmt(\"%d-%m-%Y %H:%S\", start_time);","highlight_start":25,"highlight_end":37}],"label":null,"suggested_replacement":"_current_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `current_time`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\ecs\\logger\\logger.rs:174:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m           let current_time = libc_strftime::str\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_current_time`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `pipeline`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\game_wolf_survivors\\mod.rs","byte_start":11123,"byte_end":11139,"line_start":358,"line_end":358,"column_start":18,"column_end":34,"is_primary":true,"text":[{"text":"    let Assets { ref mut pipeline, ref maps, .. } = *Assets;","highlight_start":18,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try removing the field","code":null,"level":"help","spans":[{"file_name":"src\\game_wolf_survivors\\mod.rs","byte_start":11123,"byte_end":11140,"line_start":358,"line_end":358,"column_start":18,"column_end":35,"is_primary":true,"text":[{"text":"    let Assets { ref mut pipeline, ref maps, .. } = *Assets;","highlight_start":18,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `pipeline`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\game_wolf_survivors\\mod.rs:358:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0mlet Assets { ref mut pipeline, ref maps, .. } = \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: try removing the field\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `maps`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\game_wolf_survivors\\mod.rs","byte_start":11141,"byte_end":11149,"line_start":358,"line_end":358,"column_start":36,"column_end":44,"is_primary":true,"text":[{"text":"    let Assets { ref mut pipeline, ref maps, .. } = *Assets;","highlight_start":36,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try removing the field","code":null,"level":"help","spans":[{"file_name":"src\\game_wolf_survivors\\mod.rs","byte_start":11141,"byte_end":11150,"line_start":358,"line_end":358,"column_start":36,"column_end":45,"is_primary":true,"text":[{"text":"    let Assets { ref mut pipeline, ref maps, .. } = *Assets;","highlight_start":36,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `maps`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\game_wolf_survivors\\mod.rs:358:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0mine, ref maps, .. } = *Assets;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: try removing the field\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `params`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\game_wolf_survivors\\mod.rs","byte_start":14241,"byte_end":14247,"line_start":436,"line_end":436,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let params = ();","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\game_wolf_survivors\\mod.rs","byte_start":14241,"byte_end":14247,"line_start":436,"line_end":436,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let params = ();","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"_params","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `params`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\game_wolf_survivors\\mod.rs:436:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m436\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let params = ();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_params`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\game_wolf_survivors\\mod.rs","byte_start":17917,"byte_end":17941,"line_start":533,"line_end":533,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"    let mut animation_transition = sys.state(&|| Instant::now())?;","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\game_wolf_survivors\\mod.rs","byte_start":17917,"byte_end":17921,"line_start":533,"line_end":533,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut animation_transition = sys.state(&|| Instant::now())?;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\game_wolf_survivors\\mod.rs:533:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m533\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut animation_transition = sys.state(&|| In\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `OpenGL` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\game_wolf_survivors\\mod.rs","byte_start":13874,"byte_end":13880,"line_start":424,"line_end":424,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    OpenGL: &mut OpenGL,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\game_wolf_survivors\\mod.rs","byte_start":13874,"byte_end":13880,"line_start":424,"line_end":424,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    OpenGL: &mut OpenGL,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":"open_gl","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `OpenGL` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\game_wolf_survivors\\mod.rs:424:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m424\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    OpenGL: &mut OpenGL,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `open_gl`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `Assets` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\game_wolf_survivors\\mod.rs","byte_start":13900,"byte_end":13906,"line_start":425,"line_end":425,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Assets: &Assets,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\game_wolf_survivors\\mod.rs","byte_start":13900,"byte_end":13906,"line_start":425,"line_end":425,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Assets: &Assets,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":"assets","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `Assets` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\game_wolf_survivors\\mod.rs:425:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m425\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Assets: &Assets,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `assets`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `Effect` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\game_wolf_survivors\\mod.rs","byte_start":13922,"byte_end":13928,"line_start":426,"line_end":426,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Effect: &mut View<Components<Effect>, write>,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\game_wolf_survivors\\mod.rs","byte_start":13922,"byte_end":13928,"line_start":426,"line_end":426,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Effect: &mut View<Components<Effect>, write>,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":"effect","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `Effect` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\game_wolf_survivors\\mod.rs:426:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m426\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Effect: &mut View<Components<Effect>, write>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `effect`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"17 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 17 warnings emitted\u001b[0m\n\n"}
